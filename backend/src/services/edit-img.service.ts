import axios from "axios";
import { GoogleGenAI, Modality } from "@google/genai";

export async function editImageWithGemini(imageUrl: string, prompt: string): Promise<Buffer> {
  const ai = new GoogleGenAI({ apiKey: process.env.GOOGLE_API_KEY });

  // Get image from the URL
  const response = await axios.get(imageUrl, { responseType: "arraybuffer" });
  const base64Image = Buffer.from(response.data).toString("base64");

  const contents = [
    { text: prompt },
    {
      inlineData: {
        mimeType: "image/png",
        data: base64Image,
      },
    },
  ];

  const result = await ai.models.generateContent({
    model: "gemini-2.0-flash-exp-image-generation",
    contents: contents,
    config: {
      responseModalities: [Modality.TEXT, Modality.IMAGE],
    },
  });

  const part = result?.candidates?.[0]?.content?.parts?.find(p => p.inlineData);
  const base64GeneratedImage = part?.inlineData?.data;

  if (!base64GeneratedImage) {
    throw new Error("No image generated by Gemini.");
  }

  return Buffer.from(base64GeneratedImage, "base64");
}
